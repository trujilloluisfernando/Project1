// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Script1</b><br>
 * Generated     : <b>2018/07/18 17:20:12</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 amd64 6.1 <br>
 * 
 * @since  julio 18, 2018
 * @author DELL
 */
public abstract class Script1Helper extends RationalTestScript
{
	/**
	 * Aceptar: with default state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"));
	}
	/**
	 * Aceptar: with specific test context and state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"), anchor, flags);
	}
	
	/**
	 * AddToOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $16.95
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"));
	}
	/**
	 * AddToOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $16.95
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"), anchor, flags);
	}
	
	/**
	 * CardNumberIncludeTheSpaces: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberIncludeTheSpaces() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberIncludeTheSpaces"));
	}
	/**
	 * CardNumberIncludeTheSpaces: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberIncludeTheSpaces(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberIncludeTheSpaces"), anchor, flags);
	}
	
	/**
	 * ClassicsCD: with default state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"));
	}
	/**
	 * ClassicsCD: with specific test context and state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"), anchor, flags);
	}
	
	/**
	 * creditCombo: with default state.
	 *		.itemCount : 3
	 * 		.itemText : {Visa,Amex,Mastercard}
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Card Type:
	 * 		name : creditCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject creditCombo() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("creditCombo"));
	}
	/**
	 * creditCombo: with specific test context and state.
	 *		.itemCount : 3
	 * 		.itemText : {Visa,Amex,Mastercard}
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Card Type:
	 * 		name : creditCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject creditCombo(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("creditCombo"), anchor, flags);
	}
	
	/**
	 * CustomList: with default state.
	 *		.class : MyListBox
	 * 		name : CustomList
	 * 		.classIndex : 0
	 */
	protected GuiTestObject customList() 
	{
		return new GuiTestObject(
                        getMappedTestObject("customList"));
	}
	/**
	 * CustomList: with specific test context and state.
	 *		.class : MyListBox
	 * 		name : CustomList
	 * 		.classIndex : 0
	 */
	protected GuiTestObject customList(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("customList"), anchor, flags);
	}
	
	/**
	 * ExpirationDate: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"));
	}
	/**
	 * ExpirationDate: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"), anchor, flags);
	}
	
	/**
	 * MemberLogon: with default state.
	 *		.captionText : Member Logon
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Member Logon
	 * 		.processName : javaw.exe
	 * 		name : logFrame1
	 */
	protected TopLevelTestObject memberLogon() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("memberLogon"));
	}
	/**
	 * MemberLogon: with specific test context and state.
	 *		.captionText : Member Logon
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Member Logon
	 * 		.processName : javaw.exe
	 * 		name : logFrame1
	 */
	protected TopLevelTestObject memberLogon(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("memberLogon"), anchor, flags);
	}
	
	/**
	 * nameCombo: with default state.
	 *		.itemCount : 16
	 * 		.itemText : {Trent Culpito,Susan Flontly,Emma Trenchenza,Claire Stratus,Rick Tumbler,Tony Mi ...
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Full Name:
	 * 		name : nameCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject nameCombo() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("nameCombo"));
	}
	/**
	 * nameCombo: with specific test context and state.
	 *		.itemCount : 16
	 * 		.itemText : {Trent Culpito,Susan Flontly,Emma Trenchenza,Claire Stratus,Rick Tumbler,Tony Mi ...
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Full Name:
	 * 		name : nameCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject nameCombo(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("nameCombo"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * Password: with default state.
	 *		.class : javax.swing.JPasswordField
	 * 		.priorLabel : Password:
	 * 		name : .passText2
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject password() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("password"));
	}
	/**
	 * Password: with specific test context and state.
	 *		.class : javax.swing.JPasswordField
	 * 		.priorLabel : Password:
	 * 		name : .passText2
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject password(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("password"), anchor, flags);
	}
	
	/**
	 * PlaceAnOrder: with default state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"));
	}
	/**
	 * PlaceAnOrder: with specific test context and state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"), anchor, flags);
	}
	
	/**
	 * Quantity: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Quantity:
	 * 		name : .quantityField
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject quantity() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("quantity"));
	}
	/**
	 * Quantity: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Quantity:
	 * 		name : .quantityField
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject quantity(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("quantity"), anchor, flags);
	}
	
	/**
	 * RelatedItems: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems() 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"));
	}
	/**
	 * RelatedItems: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"), anchor, flags);
	}
	
	/**
	 * RememberPassword: with default state.
	 *		text : Remember Password
	 * 		.class : javax.swing.JCheckBox
	 * 		accessibleContext.accessibleName : Password
	 * 		name : checkRemember
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject rememberPassword() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("rememberPassword"));
	}
	/**
	 * RememberPassword: with specific test context and state.
	 *		text : Remember Password
	 * 		.class : javax.swing.JCheckBox
	 * 		accessibleContext.accessibleName : Password
	 * 		name : checkRemember
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject rememberPassword(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("rememberPassword"), anchor, flags);
	}
	
	/**
	 * YourOrderHasBeenReceivedYourOrderNumberIs40: with default state.
	 *		text : Your order has been received!  Your order number is: 40.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Your order has been received!  Your order number is: 40.
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yourOrderHasBeenReceivedYourOr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("yourOrderHasBeenReceivedYourOr"));
	}
	/**
	 * YourOrderHasBeenReceivedYourOrderNumberIs40: with specific test context and state.
	 *		text : Your order has been received!  Your order number is: 40.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Your order has been received!  Your order number is: 40.
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yourOrderHasBeenReceivedYourOr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("yourOrderHasBeenReceivedYourOr"), anchor, flags);
	}
	
	

	protected Script1Helper()
	{
		setScriptName("Script1");
	}
	
}

