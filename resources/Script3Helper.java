// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Script3</b><br>
 * Generated     : <b>2018/07/19 09:59:37</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 amd64 6.1 <br>
 * 
 * @since  julio 19, 2018
 * @author DELL
 */
public abstract class Script3Helper extends RationalTestScript
{
	/**
	 * _24025: with default state.
	 *		text : $240.25
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : $240.25
	 * 		name : totalPrice
	 * 		.classIndex : 9
	 */
	protected GuiTestObject _24025() 
	{
		return new GuiTestObject(
                        getMappedTestObject("_24025"));
	}
	/**
	 * _24025: with specific test context and state.
	 *		text : $240.25
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : $240.25
	 * 		name : totalPrice
	 * 		.classIndex : 9
	 */
	protected GuiTestObject _24025(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("_24025"), anchor, flags);
	}
	
	/**
	 * Aceptar: with default state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"));
	}
	/**
	 * Aceptar: with specific test context and state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"), anchor, flags);
	}
	
	/**
	 * AddToOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $0.00
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"));
	}
	/**
	 * AddToOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $0.00
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"), anchor, flags);
	}
	
	/**
	 * Album: with default state.
	 *		tabCount : 2
	 * 		.class : javax.swing.JTabbedPane
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"));
	}
	/**
	 * Album: with specific test context and state.
	 *		tabCount : 2
	 * 		.class : javax.swing.JTabbedPane
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"), anchor, flags);
	}
	
	/**
	 * CardNumberIncludeTheSpaces: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberInputWithSpaces() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberInputWithSpaces"));
	}
	/**
	 * CardNumberIncludeTheSpaces: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Card Number (include the spaces):
	 * 		name : .cardNumberField
	 * 		.classIndex : 3
	 */
	protected TextGuiSubitemTestObject cardNumberInputWithSpaces(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cardNumberInputWithSpaces"), anchor, flags);
	}
	
	/**
	 * ClassicsCD: with default state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"));
	}
	/**
	 * ClassicsCD: with specific test context and state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"), anchor, flags);
	}
	
	/**
	 * tree2: with default state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject compositorsTree() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("compositorsTree"));
	}
	/**
	 * tree2: with specific test context and state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject compositorsTree(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("compositorsTree"), anchor, flags);
	}
	
	/**
	 * creditCombo: with default state.
	 *		.itemCount : 3
	 * 		.itemText : {Visa,Amex,Mastercard}
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Card Type:
	 * 		name : creditCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject creditCombo() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("creditCombo"));
	}
	/**
	 * creditCombo: with specific test context and state.
	 *		.itemCount : 3
	 * 		.itemText : {Visa,Amex,Mastercard}
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Card Type:
	 * 		name : creditCombo
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject creditCombo(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("creditCombo"), anchor, flags);
	}
	
	/**
	 * CustomList: with default state.
	 *		.class : MyListBox
	 * 		name : CustomList
	 * 		.classIndex : 0
	 */
	protected GuiTestObject customList() 
	{
		return new GuiTestObject(
                        getMappedTestObject("customList"));
	}
	/**
	 * CustomList: with specific test context and state.
	 *		.class : MyListBox
	 * 		name : CustomList
	 * 		.classIndex : 0
	 */
	protected GuiTestObject customList(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("customList"), anchor, flags);
	}
	
	/**
	 * ExpirationDate: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"));
	}
	/**
	 * ExpirationDate: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Expiration Date:
	 * 		name : .expireField
	 * 		.classIndex : 4
	 */
	protected TextGuiSubitemTestObject expirationDate(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("expirationDate"), anchor, flags);
	}
	
	/**
	 * Name: with default state.
	 *		text : Name:
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Name:
	 * 		name : name-orderBag
	 * 		.classIndex : 13
	 */
	protected GuiTestObject name() 
	{
		return new GuiTestObject(
                        getMappedTestObject("name"));
	}
	/**
	 * Name: with specific test context and state.
	 *		text : Name:
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Name:
	 * 		name : name-orderBag
	 * 		.classIndex : 13
	 */
	protected GuiTestObject name(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("name"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * PlaceAnOrder: with default state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"));
	}
	/**
	 * PlaceAnOrder: with specific test context and state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"), anchor, flags);
	}
	
	/**
	 * Quantity: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Quantity:
	 * 		name : .quantityField
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject quantity() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("quantity"));
	}
	/**
	 * Quantity: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Quantity:
	 * 		name : .quantityField
	 * 		.classIndex : 2
	 */
	protected TextGuiSubitemTestObject quantity(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("quantity"), anchor, flags);
	}
	
	/**
	 * RelatedItems: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems() 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"));
	}
	/**
	 * RelatedItems: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"), anchor, flags);
	}
	
	/**
	 * YourOrderHasBeenReceivedYourOrderNumberIs74: with default state.
	 *		text : Your order has been received!  Your order number is: 74.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Your order has been received!  Your order number is: 74.
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yourOrderHasBeenReceivedYourOr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("yourOrderHasBeenReceivedYourOr"));
	}
	/**
	 * YourOrderHasBeenReceivedYourOrderNumberIs74: with specific test context and state.
	 *		text : Your order has been received!  Your order number is: 74.
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Your order has been received!  Your order number is: 74.
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yourOrderHasBeenReceivedYourOr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("yourOrderHasBeenReceivedYourOr"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point CardNumberIncludeTheSpaces_text object in the SUT.
	 */
	protected IFtVerificationPoint CardNumberIncludeTheSpaces_textVP() 
	{
		return vp("CardNumberIncludeTheSpaces_text");
	}
	protected IFtVerificationPoint CardNumberIncludeTheSpaces_textVP(TestObject anchor)
	{
		return vp("CardNumberIncludeTheSpaces_text", anchor);
	}
	
	/**
	 * Locate and return the verification point CustomList_standard object in the SUT.
	 */
	protected IFtVerificationPoint CustomList_standardVP() 
	{
		return vp("CustomList_standard");
	}
	protected IFtVerificationPoint CustomList_standardVP(TestObject anchor)
	{
		return vp("CustomList_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Name_standard object in the SUT.
	 */
	protected IFtVerificationPoint Name_standardVP() 
	{
		return vp("Name_standard");
	}
	protected IFtVerificationPoint Name_standardVP(TestObject anchor)
	{
		return vp("Name_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point _24025_text object in the SUT.
	 */
	protected IFtVerificationPoint _24025_textVP() 
	{
		return vp("_24025_text");
	}
	protected IFtVerificationPoint _24025_textVP(TestObject anchor)
	{
		return vp("_24025_text", anchor);
	}
	
	

	protected Script3Helper()
	{
		setScriptName("Script3");
	}
	
}

